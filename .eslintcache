[{"/Users/abhi/Desktop/fullstack/v2stech/react-crud/src/index.js":"1","/Users/abhi/Desktop/fullstack/v2stech/react-crud/src/components/AddUser.js":"2","/Users/abhi/Desktop/fullstack/v2stech/react-crud/src/App.js":"3","/Users/abhi/Desktop/fullstack/v2stech/react-crud/src/components/UserList.js":"4","/Users/abhi/Desktop/fullstack/v2stech/react-crud/src/services/UserService.js":"5","/Users/abhi/Desktop/fullstack/v2stech/react-crud/src/http-common.js":"6"},{"size":238,"mtime":1611120825000,"results":"7","hashOfConfig":"8"},{"size":2600,"mtime":1611207925000,"results":"9","hashOfConfig":"8"},{"size":1145,"mtime":1611205839000,"results":"10","hashOfConfig":"8"},{"size":2623,"mtime":1611206240000,"results":"11","hashOfConfig":"8"},{"size":212,"mtime":1611207847000,"results":"12","hashOfConfig":"8"},{"size":164,"mtime":1611206727000,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"19mxdtp",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/abhi/Desktop/fullstack/v2stech/react-crud/src/index.js",[],["30","31"],"/Users/abhi/Desktop/fullstack/v2stech/react-crud/src/components/AddUser.js",["32"],"import React,{useState} from 'react'\nimport UserService from '../services/UserService'\n\nconst AddUser=()=>{\n\n    const initialUserState={\n        id:null,\n        firstName:'',\n        lastName:'',\n        city:'',\n        isActive:false\n    }\n    const [user,setUser]=useState(initialUserState)\n    const [submitted,setSubmitted]=useState(false)\n\n    const onChange=(event)=>{\n        const {name,value}=event.target \n        setUser({...user,[name]:value})\n    }\n\n    const saveUser=()=>{\n        var userData={\n            firstName:user.firstName,\n            lastName:user.lastName,\n            city:user.city,\n            isActive:user.isActive\n        }\n       console.log(userData)\n       UserService.create(userData)\n        .then(response=>{\n            console.log(response.data)\n        })\n\n    }\n\n    const newUser=()=>{\n        \n    }\n\n    return(\n\n        <div className=\"submit-form\">\n            {submitted ? (\n                <div>\n                    <h3>User submitted Successfully</h3>\n                    <button className=\"btn btn-success\" onClick={newUser}>Add</button>\n                </div>\n            ):(\n                <div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"firstName\">FirstName</label>\n                    <input type=\"text\"\n                       className=\"form-control\"\n                       id=\"firstName\"\n                       value={user.firstName}\n                       name=\"firstName\"\n                       onChange={onChange}\n                       required/>\n                </div>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"lastName\">LastName</label>\n                    <input type=\"text\"\n                       className=\"form-control\"\n                       id=\"lastName\"\n                       value={user.lastName}\n                       name=\"lastName\"\n                       onChange={onChange}\n                       required/>\n                </div>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"city\">City</label>\n                    <input type=\"text\"\n                       className=\"form-control\"\n                       id=\"city\"\n                       value={user.city}\n                       name=\"city\"\n                       onChange={onChange}\n                       required/>\n                </div>\n\n                <button onClick={saveUser} className=\"btn btn-success\">\n                    Submit\n                </button>\n            </div>\n            )}    \n        </div>\n    )\n}\n\nexport default AddUser","/Users/abhi/Desktop/fullstack/v2stech/react-crud/src/App.js",[],"/Users/abhi/Desktop/fullstack/v2stech/react-crud/src/components/UserList.js",["33","34","35","36"],"import React,{useState} from 'react'\n\nconst UserList=()=>{\n    const [users,setUsers]=useState([])\n    const [currentUser,setCurrentUser]=useState(null)\n    const [searchUser,setSearchUser]=useState('')\n    const [currentIndex,setCurrentIndex]=useState(-1)\n\n    // tells that component need to do something after render or performing the DOM updates\n    // gets invoked after the component is rendered or after the DOM updates\n    const useEffect=(() => {\n       fetchUsers()\n    }, [])\n\n    const onChangeSearchUser=event=>{\n        setSearchUser(event.target.value)\n    }\n\n    const fetchUsers=()=>{\n\n    }\n    const findByUser=()=>{\n\n    }\n    return(\n        <div className=\"list row\">\n            <div className=\"col-md-10\">\n                <div className=\"input-group mb-3\">\n                    <input type=\"text\"\n                           className=\"form-control\"\n                           placeholder=\"Searcb by user\"\n                           value={searchUser}\n                           onChange={onChangeSearchUser}/>\n                 \n                <div className=\"input-group-append\">\n                    <button className=\"btn btn-outline-secondary\"\n                            type=\"button\"\n                            onClick={findByUser}>\n                        Search User\n                    </button>\n                </div>\n            </div>\n        </div>\n\n        <div className=\"col-md-6\">\n            <h3>User List : </h3>\n\n            <ul className=\"list-group\">\n                 { users && users.map((user,index)=>\n                    <li className={\n                        \"list-group-item\" + (index===currentIndex ? \"active\":\"\")\n                    }\n                    key={index}>\n                        {user.firstName+' '+user.lastName}\n                    </li>)\n\n                 }\n            </ul>\n        </div>\n\n        <div className=\"col-md-6\">\n           { currentUser ? (\n               <div>\n                    <h3>User Info:</h3>\n                    <div>\n                        <label htmlFor=\"firstName\">FirstName: {currentUser.firstName}</label>\n                    </div>\n                    <div>\n                        <label htmlFor=\"lastName\">LastName: {currentUser.lastName}</label>\n                    </div>\n                    <div>\n                        <label htmlFor=\"city\">City: {currentUser.city}</label>\n                    </div>\n               </div>\n           ) :(\n               <div>\n                  <p>Please select user...</p>\n               </div>\n           )\n\n           }\n        </div>\n     </div>\n    )\n}\n\nexport default UserList","/Users/abhi/Desktop/fullstack/v2stech/react-crud/src/services/UserService.js",["37"],"import http from '../http-common'\n\nconst getAllUsers=()=>{\n    return http.get(\"/getAllUsers\")\n}\n\nconst create=userData=>{\n    return http.post(\"/users\",userData)\n}\n\nexport default {\n    getAllUsers,\n    create\n}","/Users/abhi/Desktop/fullstack/v2stech/react-crud/src/http-common.js",[],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":14,"column":22,"nodeType":"44","messageId":"45","endLine":14,"endColumn":34},{"ruleId":"42","severity":1,"message":"46","line":4,"column":18,"nodeType":"44","messageId":"45","endLine":4,"endColumn":26},{"ruleId":"42","severity":1,"message":"47","line":5,"column":24,"nodeType":"44","messageId":"45","endLine":5,"endColumn":38},{"ruleId":"42","severity":1,"message":"48","line":7,"column":25,"nodeType":"44","messageId":"45","endLine":7,"endColumn":40},{"ruleId":"42","severity":1,"message":"49","line":11,"column":11,"nodeType":"44","messageId":"45","endLine":11,"endColumn":20},{"ruleId":"50","severity":1,"message":"51","line":11,"column":1,"nodeType":"52","endLine":14,"endColumn":2},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"no-unused-vars","'setSubmitted' is assigned a value but never used.","Identifier","unusedVar","'setUsers' is assigned a value but never used.","'setCurrentUser' is assigned a value but never used.","'setCurrentIndex' is assigned a value but never used.","'useEffect' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]